version: "3.3"

services:
  midpoint_data:
    image: postgres:16-alpine
    environment:
     - POSTGRES_PASSWORD=db.secret.pw.007
     - POSTGRES_USER=midpoint
     - POSTGRES_INITDB_ARGS=--lc-collate=en_US.utf8 --lc-ctype=en_US.utf8
    networks:
     - net
    volumes:
     - midpoint_data:/var/lib/postgresql/data
     - ./:/backup:Z

  data_init:
    image: evolveum/midpoint:${MP_VER:-latest}-alpine
    command: >
      bash -c "
      cd /opt/midpoint ;
      bin/midpoint.sh init-native ;
      echo ' - - - - - - ' ;
      bin/ninja.sh -B info >/dev/null 2>/tmp/ninja.log ;
      grep -q \"ERROR\" /tmp/ninja.log && (
      bin/ninja.sh run-sql --create --mode REPOSITORY  ;
      bin/ninja.sh run-sql --create --mode AUDIT
      ) ||
      echo -e '\\n Repository init is not needed...' ;
      "
    depends_on:
     - midpoint_data
    environment:
     - MP_SET_midpoint_repository_jdbcUsername=midpoint
     - MP_SET_midpoint_repository_jdbcPassword=db.secret.pw.007
     - MP_SET_midpoint_repository_jdbcUrl=jdbc:postgresql://midpoint_data:5432/midpoint
     - MP_SET_midpoint_repository_database=postgresql
     - MP_INIT_CFG=/opt/midpoint/var
    networks:
     - net
    volumes:
     - midpoint_home:/opt/midpoint/var

  midpoint_server:
    image: evolveum/midpoint:${MP_VER:-latest}-alpine
    depends_on:
      data_init:
        condition: service_completed_successfully
      midpoint_data:
        condition: service_started
    command: [ "/opt/midpoint/bin/midpoint.sh", "container" ]
    ports:
      - 8082:8080
    environment:
     - MP_SET_midpoint_repository_jdbcUsername=midpoint
     - MP_SET_midpoint_repository_jdbcPassword=db.secret.pw.007
     - MP_SET_midpoint_repository_jdbcUrl=jdbc:postgresql://midpoint_data:5432/midpoint
     - MP_SET_midpoint_repository_database=postgresql
     - MP_SET_midpoint_administrator_initialPassword=Test5ecr3t
     - MP_UNSET_midpoint_repository_hibernateHbm2ddl=1
     - MP_NO_ENV_COMPAT=1
    networks:
     - net
    volumes:
     - midpoint_home:/opt/midpoint/var
     - ./:/opt/midpoint/var/import:Z

  midpoint_restore:
    image: evolveum/midpoint:${MP_VER:-latest}-alpine
    command: 
      - /bin/bash
      - -c
      - |
        echo 'Restoring database...'
        # Restore PostgreSQL data
        cp -r /backup/midpoint_data_backup/* /var/lib/postgresql/data/
        chown -R 999:999 /var/lib/postgresql/data/
        chmod -R 700 /var/lib/postgresql/data/
        
        echo 'Restoring keystore file...'
        # Restore keystore file
        if [ -f /backup/keystore.jceks.backup ]; then
          cp /backup/keystore.jceks.backup /opt/midpoint/var/keystore.jceks
          chmod 600 /opt/midpoint/var/keystore.jceks
          echo 'Keystore file restored successfully.'
        else
          echo 'WARNING: Keystore backup file not found!'
        fi
        
        echo 'Restore completed.'
    depends_on:
      - midpoint_data
    volumes:
      - midpoint_data:/var/lib/postgresql/data
      - midpoint_home:/opt/midpoint/var
      - ./:/backup:Z
    networks:
      - net
    profiles:
      - restore

networks:
  net:
    driver: bridge

volumes:
  midpoint_data:
  midpoint_home: